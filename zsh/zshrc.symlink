export DOTFILES=$HOME/.dotfiles
export ZSH=$DOTFILES/zsh

# Native ZSH feature: https://nuclearsquid.com/writings/reporttime-in-zsh/
# Report stats for task longer that XX seconds
export REPORTTIME=10


############################################
# Setup TERM
############################################
# [[ -e ~/.terminfo ]] && export TERMINFO_DIRS=~/.terminfo:/usr/share/terminfo
# if [ -z "$TMUX" ]; then
#     export TERM=xterm-256color-italic
# else
#     export TERM=tmux-256color-italic
# fi


############################################
# ENV Variables
############################################

# OS X will use colors for LS with this
export CLICOLOR=true

export EDITOR='nvim'
export GIT_EDITOR='nvim'

# rigrep config
export RIPGREP_CONFIG_PATH="$HOME/.rgrc"

# GO Setup
export CODE_DIR="$HOME/code"
export GOPATH="$CODE_DIR/go"
export PATH=$PATH:${GOPATH//://bin:}/bin

# Android Setup
export ANDROID_HOME=/usr/local/share/android-sdk
export ANDROID_NDK=/usr/local/share/android-ndk
# export PATH=$PATH:$ANDROID_HOME/emulator
# export PATH=$PATH:$ANDROID_HOME/tools
# export PATH=$PATH:$ANDROID_HOME/tools/bin
# export PATH=$PATH:$ANDROID_HOME/platform-tools

# Default editor for debugging react 
export REACT_EDITOR=code


# ENV Variables for colors
source "$ZSH/colors.zsh"

############################################
# Setup FZF
############################################
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_CTRL_T_COMMAND="fd --color=never"
export FZF_ALT_C_COMMAND="fd --color=never--type d"

############################################
# Setup Z
############################################

# Needs to happen before loading fz zplug plugin
zpath="$(brew --prefix)/etc/profile.d/z.sh"
[ -f "${zpath}" ] && source "${zpath}"

############################################
# Setup hub
############################################
if command -v hub > /dev/null 2>&1; then
    alias git=hub
fi

############################################
# Run zsh child configs
############################################

# Zplug
source "$ZSH/zplug.zsh"

# Configure Prompt
# source "$ZSH/prompt.zsh"

# zsh config options
source "$ZSH/config.zsh"

# Define Aliases & Functions
source "$ZSH/aliases.zsh"
source "$ZSH/functions.zsh"
fpath=($ZSH/functions $fpath)
autoload -U $ZSH/functions/*(:t)

source "$ZSH/completion.zsh"

# Run local (not public git friendly) zsh file
if [[ -a ~/.localrc ]]; then
    source ~/.localrc
fi

############################################
# Setup PATH basic directories
############################################

export PATH=/usr/local/bin:$PATH

# add /usr/local/sbin
if [[ -d /usr/local/sbin ]]; then
    export PATH=/usr/local/sbin:$PATH
fi

# adding path directory for custom scripts
export PATH=$DOTFILES/bin:$PATH

# check for custom bin directory and add to path
if [[ -d ~/bin ]]; then
    export PATH=~/bin:$PATH
fi

############################################
# Color For man pages
############################################
export MANROFFOPT='-c'
export LESS_TERMCAP_mb=$(tput bold; tput setaf 2)
export LESS_TERMCAP_md=$(tput bold; tput setaf 6)
export LESS_TERMCAP_me=$(tput sgr0)
export LESS_TERMCAP_so=$(tput bold; tput setaf 3; tput setab 4)
export LESS_TERMCAP_se=$(tput rmso; tput sgr0)
export LESS_TERMCAP_us=$(tput smul; tput bold; tput setaf 7)
export LESS_TERMCAP_ue=$(tput rmul; tput sgr0)
export LESS_TERMCAP_mr=$(tput rev)
export LESS_TERMCAP_mh=$(tput dim)

############################################
# Key Bindings
############################################

# move to next word with ctrl-F
bindkey -M viins "^F" vi-forward-word
# Move to end of line with ctrl-E
bindkey -M viins "^E" vi-add-eol

# make terminal command navigation sane again
bindkey '^[^[[D' backward-word
bindkey '^[^[[C' forward-word
bindkey '^[[5D' beginning-of-line
bindkey '^[[5C' end-of-line
bindkey '^[[3~' delete-char
bindkey '^?' backward-delete-char

############################################
# CELO Stuff
############################################

# Where you keep your Celo stuff
export CELO_ROOT=$CODE_DIR/celo
export GETH_BUILD_PATH=$CELO_ROOT/geth/build/bin/

# Your github handle
export HANDLE=mcortesi

# Run SSH Agent. Use ssh-add to add and remember keys for the session.
# celo-monorepo will need you to do this with your github key when updating geth dependencies.
# eval `ssh-agent`

alias celotooljs="$CELO_ROOT/celo-monorepo/packages/celotool/bin/celotooljs.sh"